{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Dropfilters.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { filterByNumericValues } from '../reducers/filters';\n\nclass Dropfilters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: ''\n    };\n    this.colChange = this.colChange.bind(this);\n    this.compChange = this.compChange.bind(this);\n    this.vChange = this.vChange.bind(this); // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  colChange(event) {\n    this.setState({\n      column: event.target.value\n    });\n  }\n\n  compChange(event) {\n    this.setState({\n      comparison: event.target.value\n    });\n  }\n\n  vChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  } // handleSubmit(values) {\n  //   handleSubmit(this.state)\n  //   console.log(this.state.column + this.state.comparison + this.state.value);\n  //   event.preventDefault();\n  // }\n\n\n  columnOptions() {\n    const filterByNumericValues = this.props.filterByNumericValues;\n    const selectedFilterColumns = filterByNumericValues.map(filter => filter.column);\n    let columns = ['coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n    columns = columns.filter(column => !selectedFilterColumns.includes(column));\n    return columns.map(column => React.createElement(\"option\", {\n      value: column,\n      key: column,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, column));\n  }\n\n  render() {\n    const tsc = this.state.comparison;\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Selecione a coluna:\", React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      value: this.state.column,\n      onChange: this.colChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.columnOptions)), React.createElement(\"label\", {\n      htmlFor: \"comparison\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Selecione a compara\\xE7\\xE3o:\", React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      value: tsc,\n      onChange: this.compChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"selecione:\"), React.createElement(\"option\", {\n      value: \"maior que\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"maior que\"), React.createElement(\"option\", {\n      value: \"menor que\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"menor que\"), React.createElement(\"option\", {\n      value: \"igual a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"igual a\"))), React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.vChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"button-filter\",\n      onClick: () => {\n        this.props.handleSubmit(this.state);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  filterByNumericValues: state.filters.filterByNumericValues\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleSubmit: values => dispatch(filterByNumericValues(values))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropfilters);\nDropfilters.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n}; // inspired by https://pt-br.reactjs.org/docs/forms.html dropdown content\n//  <button type=\"submit\" value=\"Enviar\" data-testid=\"button-filter\">Filtrar</button>\n// form onSubmit={this.handleSubmit}\n// class FlavorForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {value: 'coco'};\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   handleChange(event) {\n//     this.setState({value: event.target.value});\n//   }\n//   handleSubmit(event) {\n//     alert('Seu sabor favorito é: ' + this.state.value);\n//     event.preventDefault();\n//   }\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <label>\n//           Escolha seu sabor favorito:\n//           <select value={this.state.value} onChange={this.handleChange}>\n//             <option value=\"laranja\">Laranja</option>\n//             <option value=\"limao\">Limão</option>\n//             <option value=\"coco\">Coco</option>\n//             <option value=\"manga\">Manga</option>\n//           </select>\n//         </label>\n//         <input type=\"submit\" value=\"Enviar\" />\n//       </form>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Dropfilters.js"],"names":["PropTypes","React","Component","connect","filterByNumericValues","Dropfilters","constructor","props","state","column","comparison","value","colChange","bind","compChange","vChange","event","setState","target","columnOptions","selectedFilterColumns","map","filter","columns","includes","render","tsc","handleSubmit","mapStateToProps","filters","mapDispatchToProps","dispatch","values","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { filterByNumericValues } from '../reducers/filters';\n\n\nclass Dropfilters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: '',\n    };\n\n    this.colChange = this.colChange.bind(this);\n    this.compChange = this.compChange.bind(this);\n    this.vChange = this.vChange.bind(this);\n   // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  colChange(event) {\n    this.setState({ column: event.target.value });\n  }\n\n  compChange(event) {\n    this.setState({ comparison: event.target.value });\n  }\n\n  vChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  // handleSubmit(values) {\n  //   handleSubmit(this.state)\n  //   console.log(this.state.column + this.state.comparison + this.state.value);\n  //   event.preventDefault();\n  // }\n  columnOptions() {\n    const { filterByNumericValues } = this.props;\n    const selectedFilterColumns = filterByNumericValues.map((filter) => filter.column);\n    let columns = [\n      'coluna',\n      'population',\n      'orbital_period',\n      'diameter',\n      'rotation_period',\n      'surface_water'];\n    columns = columns.filter((column) => !selectedFilterColumns.includes(column));\n    return columns.map((column) => <option value={column} key={column}>{column}</option>);\n  }\n\n  render() {\n    const tsc = this.state.comparison;\n    return (\n      <form>\n        <label htmlFor=\"column\"> Selecione a coluna:\n          <select data-testid=\"column-filter\" value={this.state.column} onChange={this.colChange}>\n            {this.columnOptions}\n          </select>\n        </label>\n        <label htmlFor=\"comparison\"> Selecione a comparação:\n          <select data-testid=\"comparison-filter\" value={tsc} onChange={this.compChange}>\n            <option>selecione:</option>\n            <option value=\"maior que\">maior que</option>\n            <option value=\"menor que\">menor que</option>\n            <option value=\"igual a\">igual a</option>\n          </select>\n        </label>\n        <input type=\"number\" data-testid=\"value-filter\" onChange={this.vChange} />\n        <button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={() => { this.props.handleSubmit(this.state);  }}\n        >Filtrar</button></form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filterByNumericValues: state.filters.filterByNumericValues,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleSubmit: (values) => dispatch(filterByNumericValues(values)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropfilters);\n\nDropfilters.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\n// inspired by https://pt-br.reactjs.org/docs/forms.html dropdown content\n\n//  <button type=\"submit\" value=\"Enviar\" data-testid=\"button-filter\">Filtrar</button>\n// form onSubmit={this.handleSubmit}\n// class FlavorForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {value: 'coco'};\n\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   handleChange(event) {\n//     this.setState({value: event.target.value});\n//   }\n\n//   handleSubmit(event) {\n//     alert('Seu sabor favorito é: ' + this.state.value);\n//     event.preventDefault();\n//   }\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <label>\n//           Escolha seu sabor favorito:\n//           <select value={this.state.value} onChange={this.handleChange}>\n//             <option value=\"laranja\">Laranja</option>\n//             <option value=\"limao\">Limão</option>\n//             <option value=\"coco\">Coco</option>\n//             <option value=\"manga\">Manga</option>\n//           </select>\n//         </label>\n//         <input type=\"submit\" value=\"Enviar\" />\n//       </form>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}