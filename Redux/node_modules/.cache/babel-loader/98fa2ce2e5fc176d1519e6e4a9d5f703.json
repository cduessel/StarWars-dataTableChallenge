{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleGoFetch } from '../reducers';\nimport HeaderTable from './HeaderTable';\nimport datafilterfunction from '../dfilters';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: 'HelloWorld'\n    };\n  }\n\n  componentDidMount() {\n    const handleFetch = this.props.handleFetch;\n    handleFetch();\n  }\n\n  render() {\n    const _this$props = this.props,\n          isfetching = _this$props.isfetching,\n          data = _this$props.data,\n          filterByName = _this$props.filterByName,\n          filterByNumericValues = _this$props.filterByNumericValues;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, isfetching && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Loading...\"), !data && React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Error fetching data!\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(HeaderTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), !isfetching && datafilterfunction(data.filter(planets => planets.name.includes(filterByName)), filterByNumericValues).map(planet => React.createElement(\"tbody\", {\n      key: planet.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, planet.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, planet.rotation_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, planet.orbital_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, planet.diameter), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, planet.climate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, planet.gravity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, planet.terrain), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, planet.surface_water), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, planet.population), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, planet.films), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, planet.created), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, planet.edited), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, planet.url))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleFetch: e => dispatch(handleGoFetch(e))\n});\n\nconst mapStateToProps = state => ({\n  isfetching: state.fetchReducer.isfetching,\n  data: state.fetchReducer.data,\n  filterByName: state.filters.filterByName.name,\n  filterByNumericValues: state.filters.filterByNumericValues\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\nTable.propTypes = {\n  isfetching: propTypes.bool.isRequired,\n  data: propTypes.arrayOf(propTypes.object).isRequired,\n  handleFetch: propTypes.func.isRequired,\n  filterByName: propTypes.string.isRequired\n}; // Disscussed and did some pair programing with Paulo D'Andrea on this code","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["propTypes","React","Component","connect","handleGoFetch","HeaderTable","datafilterfunction","Table","constructor","props","state","test","componentDidMount","handleFetch","render","isfetching","data","filterByName","filterByNumericValues","filter","planets","name","includes","map","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","mapDispatchToProps","dispatch","e","mapStateToProps","fetchReducer","filters","bool","isRequired","arrayOf","object","func","string"],"mappings":"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","sourcesContent":["import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleGoFetch } from '../reducers';\nimport HeaderTable from './HeaderTable';\nimport datafilterfunction from '../dfilters';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { test: 'HelloWorld' };\n  }\n\n  componentDidMount() {\n    const { handleFetch } = this.props;\n    handleFetch();\n  }\n\n  render() {\n    const { isfetching, data, filterByName, filterByNumericValues } = this.props;\n    return (\n      <div>\n        {isfetching && <h1>Loading...</h1>}\n        {!data && <h2>Error fetching data!</h2>}\n        <table>\n          <HeaderTable />\n          {!isfetching && (datafilterfunction(data.filter((planets) => planets.name.includes(filterByName)), filterByNumericValues))\n          .map((planet) => (\n            <tbody key={planet.name}>\n              <tr>\n                <td >{planet.name}</td>\n                <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.climate}</td>\n                <td>{planet.gravity}</td>\n                <td>{planet.terrain}</td>\n                <td>{planet.surface_water}</td>\n                <td>{planet.population}</td>\n                <td>{planet.films}</td>\n                <td>{planet.created}</td>\n                <td>{planet.edited}</td>\n                <td>{planet.url}</td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleFetch: (e) => dispatch(handleGoFetch(e)),\n});\n\nconst mapStateToProps = (state) => ({\n  isfetching: state.fetchReducer.isfetching,\n  data: state.fetchReducer.data,\n  filterByName: state.filters.filterByName.name,\n  filterByNumericValues: state.filters.filterByNumericValues\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nTable.propTypes = {\n  isfetching: propTypes.bool.isRequired,\n  data: propTypes.arrayOf(propTypes.object).isRequired,\n  handleFetch: propTypes.func.isRequired,\n  filterByName: propTypes.string.isRequired,\n};\n\n// Disscussed and did some pair programing with Paulo D'Andrea on this code\n"]},"metadata":{},"sourceType":"module"}