{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleFetch } from '../reducers';\nimport HeaderTable from './HeaderTable';\nimport propTypes from 'prop-types';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: 'HelloWorld'\n    };\n  }\n\n  componentDidMount() {\n    const handleFetch = this.props.handleFetch;\n    handleFetch();\n  }\n\n  render() {\n    const _this$props = this.props,\n          isfetching = _this$props.isfetching,\n          data = _this$props.data,\n          filterByName = _this$props.filterByName;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, isfetching && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Loading...\"), !data && React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Error fetching data!\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(HeaderTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, filterByName), !isfetching && data.filter(planets => planets.name.includes(filterByName)).map(planet => React.createElement(\"tbody\", {\n      key: planet.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, planet.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, planet.rotation_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, planet.orbital_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, planet.diameter), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, planet.climate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, planet.gravity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, planet.terrain), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, planet.surface_water), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, planet.population), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, planet.films), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, planet.created))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleFetch: e => dispatch(handleFetch(e))\n});\n\nconst mapStateToProps = state => ({\n  isfetching: state.fetchReducer.isfetching,\n  data: state.fetchReducer.data,\n  filterByName: state.filters.filterByName.name\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\nTable.propTypes = {\n  isfetching: propTypes.bool.isRequired,\n  data: propTypes.arrayOf(propTypes.object).isRequired //  handleFetch: PropTypes.func.isRequired;\n\n}; // Disscussed and did some pair programing with Paulo D'Andrea on this code","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","Component","connect","handleFetch","HeaderTable","propTypes","Table","constructor","props","state","test","componentDidMount","render","isfetching","data","filterByName","filter","planets","name","includes","map","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","mapDispatchToProps","dispatch","e","mapStateToProps","fetchReducer","filters","bool","isRequired","arrayOf","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleFetch } from '../reducers';\nimport HeaderTable from './HeaderTable';\nimport propTypes from 'prop-types';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { test: 'HelloWorld' };\n  }\n\n  componentDidMount() {\n    const { handleFetch } = this.props;\n    handleFetch();\n  }\n\n  render() {\n    const { isfetching, data, filterByName } = this.props;\n    return (\n      <div>\n        {isfetching && <h1>Loading...</h1>}\n        {!data && <h2>Error fetching data!</h2>}\n        <table>\n          <HeaderTable />\n          <h1>{filterByName}</h1>\n          {!isfetching && (data.filter((planets)=> planets.name.includes(filterByName)))\n          .map((planet) => (\n            <tbody key={planet.name}>\n              <tr>\n                <td >{planet.name}</td>\n                <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.climate}</td>\n                <td>{planet.gravity}</td>\n                <td>{planet.terrain}</td>\n                <td>{planet.surface_water}</td>\n                <td>{planet.population}</td>\n                <td>{planet.films}</td>\n                <td>{planet.created}</td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleFetch: (e) => dispatch(handleFetch(e)),\n});\n\nconst mapStateToProps = (state) => ({\n  isfetching: state.fetchReducer.isfetching,\n  data: state.fetchReducer.data,\n  filterByName: state.filters.filterByName.name,\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nTable.propTypes = {\n  isfetching: propTypes.bool.isRequired,\n  data: propTypes.arrayOf(propTypes.object).isRequired,\n//  handleFetch: PropTypes.func.isRequired;\n};\n\n// Disscussed and did some pair programing with Paulo D'Andrea on this code\n"]},"metadata":{},"sourceType":"module"}