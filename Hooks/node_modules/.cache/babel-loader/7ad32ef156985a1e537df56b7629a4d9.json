{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/filters/Dropfilters.js\";\nimport React, { useState, useContext } from 'react';\nimport { StarWarsContext } from '../../context/starWarsContext';\nexport function datafilterfunction(filteredPlanets, filterByValues) {\n  let planets = filteredPlanets;\n\n  for (let i = 0; i < filterByValues.length; i += 1) {\n    if (filterByValues[i].comp === 'maior que') {\n      planets = planets.filter(planet => Number(planet[filterByValues[i].col]) > Number(filterByValues[i].val));\n    } else if (filterByValues[i].comp === 'menor que') {\n      planets = planets.filter(planet => Number(planet[filterByValues[i].col]) < Number(filterByValues[i].val));\n    } else if (filterByValues[i].comp === 'igual a') {\n      planets = planets.filter(planet => Number(planet[filterByValues[i].col]) === Number(filterByValues[i].val));\n    }\n  }\n\n  return planets;\n}\n\nconst Dropfilters = () => {\n  const [col, setColumn] = useState('');\n  const [comp, setComparison] = useState('');\n  const [val, setValue] = useState('');\n  const {\n    filterByValues,\n    setValues\n  } = useContext(StarWarsContext);\n\n  const columnOptions = () => {\n    const selectedFilterColumns = filterByValues.map(filter => filter.column);\n    const startColumns = ['coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n    const columns = startColumns.filter(colm => !selectedFilterColumns.includes(colm));\n    return columns.map(coluna => /*#__PURE__*/React.createElement(\"option\", {\n      value: coluna,\n      key: coluna,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }\n    }, coluna));\n  };\n\n  const Scolumn = event => setColumn(event.target.value);\n\n  const Scomp = event => setComparison(event.target.value);\n\n  const Sval = event => setValue(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \" Selecione a coluna:\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    value: col,\n    onChange: event => Scolumn(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, columnOptions())), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \" Selecione a compara\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    value: comp,\n    onChange: e => Scomp(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"selecione:\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"igual a\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"data-testid\": \"value-filter\",\n    onChange: event => Sval(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: () => {\n      setValues([...filterByValues, {\n        col,\n        comp,\n        val\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"));\n};\n\nexport default Dropfilters;","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/filters/Dropfilters.js"],"names":["React","useState","useContext","StarWarsContext","datafilterfunction","filteredPlanets","filterByValues","planets","i","length","comp","filter","planet","Number","col","val","Dropfilters","setColumn","setComparison","setValue","setValues","columnOptions","selectedFilterColumns","map","column","startColumns","columns","colm","includes","coluna","Scolumn","event","target","value","Scomp","Sval","e"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StarWarsContext } from '../../context/starWarsContext';\n\nexport function datafilterfunction(filteredPlanets, filterByValues) {\n  let planets = filteredPlanets;\n  for (let i = 0; i < filterByValues.length; i += 1) {\n    if (filterByValues[i].comp === 'maior que') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByValues[i].col]) > Number(filterByValues[i].val));\n    } else if (filterByValues[i].comp === 'menor que') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByValues[i].col]) < Number(filterByValues[i].val));\n    } else if (filterByValues[i].comp === 'igual a') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByValues[i].col]) === Number(filterByValues[i].val));\n    }\n  }\n  return planets;\n}\n\nconst Dropfilters = () => {\n  const [col, setColumn] = useState('');\n  const [comp, setComparison] = useState('');\n  const [val, setValue] = useState('');\n\n  const { filterByValues, setValues } = useContext(StarWarsContext);\n\n  const columnOptions = () => {\n    const selectedFilterColumns = filterByValues.map((filter) => filter.column);\n    const startColumns = [\n      'coluna',\n      'population',\n      'orbital_period',\n      'diameter',\n      'rotation_period',\n      'surface_water'];\n    const columns = startColumns.filter((colm) => !selectedFilterColumns.includes(colm));\n    return columns.map((coluna) => <option value={coluna} key={coluna}>{coluna}</option>);\n  };\n\n  const Scolumn = (event) => setColumn(event.target.value);\n  const Scomp = (event) => setComparison(event.target.value);\n  const Sval = (event) => setValue(event.target.value);\n\n  return (\n    <form>\n      <label htmlFor=\"column\"> Selecione a coluna:\n        <select data-testid=\"column-filter\" value={col} onChange={(event) => Scolumn(event)}>\n          {columnOptions()}\n        </select>\n      </label>\n      <label htmlFor=\"comparison\"> Selecione a comparação:\n        <select data-testid=\"comparison-filter\" value={comp} onChange={(e) => Scomp(e)}>\n          <option>selecione:</option>\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n      </label>\n      <input type=\"number\" data-testid=\"value-filter\" onChange={(event) => Sval(event)} />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={() => { setValues([...filterByValues, { col, comp, val }]); }}\n      >Filtrar</button></form>\n  );\n};\n\nexport default Dropfilters;\n"]},"metadata":{},"sourceType":"module"}