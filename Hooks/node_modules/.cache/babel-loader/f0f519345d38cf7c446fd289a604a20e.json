{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/TableBody.js\";\nimport React, { useEffect, useContext } from 'react';\nimport { StarWarsContext } from '../context/starWarsContext';\n\nconst TableBody = () => {\n  const {\n    data,\n    name,\n    filterByNumericValues\n  } = useContext(StarWarsContext);\n  const NameFilteredPlanets = data.filter(planets => planets.name.includes(name)); // {(name)}\n  //   NameFilteredPlanets\n\n  return NameFilteredPlanets.map(planet => /*#__PURE__*/React.createElement(\"tbody\", {\n    key: planet.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, planet.url))));\n};\n\nexport default TableBody; // ((filterByNumericValues) ?\n//          (datafilterfunction(NameFilteredPlanets, filterByNumericValues)) : NameFilteredPlanets)","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/TableBody.js"],"names":["React","useEffect","useContext","StarWarsContext","TableBody","data","name","filterByNumericValues","NameFilteredPlanets","filter","planets","includes","map","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,eAAT,QAAgC,4BAAhC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAAwCL,UAAU,CAACC,eAAD,CAAxD;AACA,QAAMK,mBAAmB,GAAGH,IAAI,CAACI,MAAL,CAAaC,OAAD,IAAaA,OAAO,CAACJ,IAAR,CAAaK,QAAb,CAAsBL,IAAtB,CAAzB,CAA5B,CAFsB,CAGtB;AACA;;AAEA,SACEE,mBAAmB,CAACI,GAApB,CAAyBC,MAAD,iBACtB;AAAO,IAAA,GAAG,EAAEA,MAAM,CAACP,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMO,MAAM,CAACP,IAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,MAAM,CAACC,eAAZ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,MAAM,CAACE,cAAZ,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,MAAM,CAACG,QAAZ,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,MAAM,CAACI,OAAZ,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,MAAM,CAACK,OAAZ,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,MAAM,CAACM,OAAZ,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,MAAM,CAACO,aAAZ,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,MAAM,CAACQ,UAAZ,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,MAAM,CAACS,KAAZ,CAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,MAAM,CAACU,OAAZ,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,MAAM,CAACW,MAAZ,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,MAAM,CAACY,GAAZ,CAbF,CADF,CADF,CADF;AAqBD,CA3BD;;AA6BA,eAAerB,SAAf,C,CAGE;AACA","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { StarWarsContext } from '../context/starWarsContext';\n\nconst TableBody = () => {\n  const { data, name, filterByNumericValues } = useContext(StarWarsContext);\n  const NameFilteredPlanets = data.filter((planets) => planets.name.includes(name));\n  // {(name)}\n  //   NameFilteredPlanets\n\n  return(\n    NameFilteredPlanets.map((planet) => (\n      <tbody key={planet.name}>\n        <tr>\n          <td >{planet.name}</td>\n          <td>{planet.rotation_period}</td>\n          <td>{planet.orbital_period}</td>\n          <td>{planet.diameter}</td>\n          <td>{planet.climate}</td>\n          <td>{planet.gravity}</td>\n          <td>{planet.terrain}</td>\n          <td>{planet.surface_water}</td>\n          <td>{planet.population}</td>\n          <td>{planet.films}</td>\n          <td>{planet.created}</td>\n          <td>{planet.edited}</td>\n          <td>{planet.url}</td>\n        </tr>\n      </tbody>\n    ))\n  )\n};\n\nexport default TableBody\n\n\n  // ((filterByNumericValues) ?\n  //          (datafilterfunction(NameFilteredPlanets, filterByNumericValues)) : NameFilteredPlanets)"]},"metadata":{},"sourceType":"module"}