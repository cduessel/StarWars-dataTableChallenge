{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/filters/Searchbar.js\";\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\nimport React, { useContext } from 'react';\nimport FilterDisplay from './FilterDisplay'; // import { filterByName } from '../reducers/filters';\n\nimport { StarWarsContext } from '../../context/starWarsContext';\nimport Dropfilters from './Dropfilters';\n\nconst SearchBar = () => {\n  const {\n    setFilterByName\n  } = useContext(StarWarsContext); //  const { handleChangeName } = this.props;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name-filter-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \" Search planet by name:\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-filter\",\n    type: \"text\",\n    name: \"\",\n    onChange: event => setFilterByName({\n      filterByName: {\n        name: event.target.value\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dropfilters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FilterDisplay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}; // {event => this.props.filterByName({ name: event.target.value })}\n// const mapDispatchToProps = (dispatch) => ({\n//   handleChangeName: (event) => dispatch(filterByName(event.target.value)),\n// });\n// export default connect(null, mapDispatchToProps)(SearchBar);\n// SearchBar.propTypes = {\n//   handleChangeName: PropTypes.func.isRequired,\n// };\n\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/filters/Searchbar.js"],"names":["React","useContext","FilterDisplay","StarWarsContext","Dropfilters","SearchBar","setFilterByName","event","filterByName","name","target","value"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CACA;;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAsBL,UAAU,CAACE,eAAD,CAAtC,CADsB,CAEtB;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACE;AACE,mBAAY,aADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,EAHP;AAIE,IAAA,QAAQ,EAAGI,KAAD,IAAWD,eAAe,CAAC;AAAEE,MAAAA,YAAY,EAAE;AAAEC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAArB;AAAhB,KAAD,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAjBD,C,CAmBA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AACA,eAAeN,SAAf","sourcesContent":["// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import React, { Component } from 'react';\nimport React, { useContext } from 'react';\nimport FilterDisplay from './FilterDisplay';\n// import { filterByName } from '../reducers/filters';\nimport { StarWarsContext } from '../../context/starWarsContext';\nimport Dropfilters from './Dropfilters';\n\nconst SearchBar = () => {\n  const { setFilterByName } = useContext(StarWarsContext);\n  //  const { handleChangeName } = this.props;\n  return (\n    <div>\n      <label htmlFor=\"name-filter-input\"> Search planet by name:\n        <input\n          data-testid=\"name-filter\"\n          type=\"text\"\n          name=\"\"\n          onChange={(event) => setFilterByName({ filterByName: { name: event.target.value } })}\n        />\n      </label>\n      <Dropfilters />\n      <FilterDisplay />\n    </div>\n  );\n};\n\n// {event => this.props.filterByName({ name: event.target.value })}\n\n// const mapDispatchToProps = (dispatch) => ({\n//   handleChangeName: (event) => dispatch(filterByName(event.target.value)),\n// });\n\n// export default connect(null, mapDispatchToProps)(SearchBar);\n\n// SearchBar.propTypes = {\n//   handleChangeName: PropTypes.func.isRequired,\n// };\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}