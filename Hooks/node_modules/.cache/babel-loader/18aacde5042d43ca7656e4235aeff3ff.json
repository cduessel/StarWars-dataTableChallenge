{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/Searchbar.js\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Dropfilters from './Dropfilters';\nimport FilterDisplay from './FilterDisplay';\nimport { filterByName } from '../reducers/filters';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      HelloWorld: 'HelloWorld'\n    };\n  }\n\n  render() {\n    const {\n      handleChangeName\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name-filter-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \" Search planet by name:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"name-filter\",\n      type: \"text\",\n      onChange: handleChangeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Dropfilters, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FilterDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // {event => this.props.filterByName({ name: event.target.value })}\n\n\nconst mapDispatchToProps = dispatch => ({\n  handleChangeName: event => dispatch(filterByName(event.target.value))\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\nSearchBar.propTypes = {\n  handleChangeName: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/Searchbar.js"],"names":["connect","PropTypes","React","Component","Dropfilters","FilterDisplay","filterByName","SearchBar","constructor","props","state","HelloWorld","render","handleChangeName","mapDispatchToProps","dispatch","event","target","value","propTypes","func","isRequired"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAuB,KAAKJ,KAAlC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACA;AACE,qBAAY,aADd;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAEI,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,eAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AApB+B,C,CAsBlC;;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCF,EAAAA,gBAAgB,EAAGG,KAAD,IAAWD,QAAQ,CAACT,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AADG,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCP,SAAlC,CAAf;AAEAA,SAAS,CAACY,SAAV,GAAsB;AACpBN,EAAAA,gBAAgB,EAAEZ,SAAS,CAACmB,IAAV,CAAeC;AADb,CAAtB","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Dropfilters from './Dropfilters';\nimport FilterDisplay from './FilterDisplay';\nimport { filterByName } from '../reducers/filters';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { HelloWorld: 'HelloWorld' };\n  }\n  render() {\n    const { handleChangeName } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"name-filter-input\"> Search planet by name:\n        <input\n          data-testid=\"name-filter\"\n          type=\"text\"\n          onChange={handleChangeName}\n        />\n        </label>\n        <Dropfilters />\n        <FilterDisplay />\n      </div>\n    );\n  }\n}\n// {event => this.props.filterByName({ name: event.target.value })}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleChangeName: (event) => dispatch(filterByName(event.target.value)),\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n\nSearchBar.propTypes = {\n  handleChangeName: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}