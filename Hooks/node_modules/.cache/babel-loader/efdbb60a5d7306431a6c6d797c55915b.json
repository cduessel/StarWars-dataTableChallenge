{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/FilterDisplay.js\";\n// import PropTypes from 'prop-types';\nimport React, { useContext } from 'react'; // import { connect } from 'react-redux';\n// import { removeFilter } from '../reducers/filters';\n\nimport { StarWarsContext } from '../context/starWarsContext'; // filterByNumericValues: state.filterByNumericValues.filter(\n//   ({ column }) => column !== ,\n\nconst FilterDisplay = () => {\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues\n  } = useContext(StarWarsContext);\n\n  const removeThisFilter = filterCol => {\n    const newFilters = filterByNumericValues.filter(({\n      column\n    }) => column !== filterCol);\n    setFilterByNumericValues(newFilters);\n  }; // const { handleChangeName } = this.props;\n  // const { filterByNumericValues, removeThisFilter } = this.props;\n\n\n  if (filterByNumericValues.length > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Filtros ativos:\"), filterByNumericValues.map(filtro => /*#__PURE__*/React.createElement(\"div\", {\n      key: filtro.column,\n      \"data-testid\": \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, filtro.column), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, filtro.comparison), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, filtro.value)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: removeThisFilter(filtro.column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"X\"))));\n  }\n\n  return null;\n}; // const mapDispatchToProps = { removeThisFilter: removeFilter };\n// const mapStateToProps = (state) => ({\n//   filterByNumericValues: state.filters.filterByNumericValues,\n// });\n\n\nexport default FilterDisplay; // FilterDisplay.propTypes = {\n//   filterByNumericValues: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   removeThisFilter: PropTypes.func.isRequired,\n// };","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/FilterDisplay.js"],"names":["React","useContext","StarWarsContext","FilterDisplay","filterByNumericValues","setFilterByNumericValues","removeThisFilter","filterCol","newFilters","filter","column","length","map","filtro","comparison","value"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;AACA;;AACA,SAASC,eAAT,QAAgC,4BAAhC,C,CAEA;AACA;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,qBAAF;AAAyBC,IAAAA;AAAzB,MAAsDJ,UAAU,CAACC,eAAD,CAAtE;;AAEA,QAAMI,gBAAgB,GAAIC,SAAD,IAAe;AACtC,UAAMC,UAAU,GAAGJ,qBAAqB,CAACK,MAAtB,CACjB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgBA,MAAM,KAAKH,SADV,CAAnB;AAGAF,IAAAA,wBAAwB,CAACG,UAAD,CAAxB;AACD,GALD,CAH0B,CASxB;AACF;;;AACA,MAAIJ,qBAAqB,CAACO,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEGP,qBAAqB,CAACQ,GAAtB,CAA2BC,MAAD,iBACzB;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACH,MAAjB;AAAyB,qBAAY,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,MAAM,CAACH,MAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,MAAM,CAACC,UAAZ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACE,KAAZ,CAHF,CADF,eAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAET,gBAAgB,CAACO,MAAM,CAACH,MAAR,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CADD,CAFH,CADF;AAeD;;AACD,SAAO,IAAP;AACD,CA7BD,C,CA+BA;AAEA;AACA;AACA;;;AAEA,eAAeP,aAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["// import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\n// import { connect } from 'react-redux';\n// import { removeFilter } from '../reducers/filters';\nimport { StarWarsContext } from '../context/starWarsContext';\n\n// filterByNumericValues: state.filterByNumericValues.filter(\n//   ({ column }) => column !== ,\n\nconst FilterDisplay = () => {\n  const { filterByNumericValues, setFilterByNumericValues } = useContext(StarWarsContext);\n\n  const removeThisFilter = (filterCol) => {\n    const newFilters = filterByNumericValues.filter(\n      ({ column }) => column !== filterCol\n    );\n    setFilterByNumericValues(newFilters);\n  }\n    // const { handleChangeName } = this.props;\n  // const { filterByNumericValues, removeThisFilter } = this.props;\n  if (filterByNumericValues.length > 0) {\n    return (\n      <div>\n        <h2>Filtros ativos:</h2>\n        {filterByNumericValues.map((filtro) => (\n          <div key={filtro.column} data-testid=\"filter\">\n            <ul>\n              <li>{filtro.column}</li>\n              <li>{filtro.comparison}</li>\n              <li>{filtro.value}</li>\n            </ul>\n            <button type=\"button\" onClick={removeThisFilter(filtro.column)}>X</button>\n          </div>\n        ))}\n      </div>\n    );\n  }\n  return null;\n}\n\n// const mapDispatchToProps = { removeThisFilter: removeFilter };\n\n// const mapStateToProps = (state) => ({\n//   filterByNumericValues: state.filters.filterByNumericValues,\n// });\n\nexport default FilterDisplay;\n\n// FilterDisplay.propTypes = {\n//   filterByNumericValues: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   removeThisFilter: PropTypes.func.isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}