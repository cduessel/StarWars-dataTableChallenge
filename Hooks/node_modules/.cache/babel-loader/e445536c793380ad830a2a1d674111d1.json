{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/filters/Dropfilters.js\";\nimport React, { useState, useContext } from 'react';\nimport { StarWarsContext } from '../../context/starWarsContext';\nexport function datafilterfunction(filteredPlanets, filterByNumericValues) {\n  let planets = filteredPlanets;\n\n  for (let i = 0; i < filterByNumericValues.length; i += 1) {\n    if (filterByNumericValues[i].comparison === 'maior que') {\n      planets = planets.filter(planet => Number(planet[filterByNumericValues[i].column]) > Number(filterByNumericValues[i].value));\n    } else if (filterByNumericValues[i].comparison === 'menor que') {\n      planets = planets.filter(planet => Number(planet[filterByNumericValues[i].column]) < Number(filterByNumericValues[i].value));\n    } else if (filterByNumericValues[i].comparison === 'igual a') {\n      planets = planets.filter(planet => Number(planet[filterByNumericValues[i].column]) === Number(filterByNumericValues[i].value));\n    }\n  }\n\n  return planets;\n}\n\nconst Dropfilters = () => {\n  const [col, setColumn] = useState('');\n  const [comp, setComparison] = useState('');\n  const [val, setValue] = useState('');\n  const {\n    filterByNumericValues,\n    setfilterByNumericValues\n  } = useContext(StarWarsContext);\n\n  const columnOptions = () => {\n    const selectedFilterColumns = filterByNumericValues.map(filter => filter.column);\n    const startColumns = ['coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n    const columns = startColumns.filter(colm => !selectedFilterColumns.includes(colm));\n    return columns.map(coluna => /*#__PURE__*/React.createElement(\"option\", {\n      value: coluna,\n      key: coluna,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }\n    }, coluna));\n  };\n\n  const Scolumn = event => setColumn(event.target.value);\n\n  const Scomp = event => setComparison(event.target.value);\n\n  const Sval = event => setValue(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \" Selecione a coluna:\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    value: column,\n    onChange: event => Scolumn(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, columnOptions())), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \" Selecione a compara\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    value: comparison,\n    onChange: e => Scomp(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"selecione:\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"igual a\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"data-testid\": \"value-filter\",\n    onChange: event => Sval(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: () => {\n      setfilterByNumericValues([...filterByNumericValues, {\n        col,\n        comp,\n        val\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"));\n};\n\nexport default Dropfilters;","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/filters/Dropfilters.js"],"names":["React","useState","useContext","StarWarsContext","datafilterfunction","filteredPlanets","filterByNumericValues","planets","i","length","comparison","filter","planet","Number","column","value","Dropfilters","col","setColumn","comp","setComparison","val","setValue","setfilterByNumericValues","columnOptions","selectedFilterColumns","map","startColumns","columns","colm","includes","coluna","Scolumn","event","target","Scomp","Sval","e"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StarWarsContext } from '../../context/starWarsContext';\n\nexport function datafilterfunction(filteredPlanets, filterByNumericValues) {\n  let planets = filteredPlanets;\n  for (let i = 0; i < filterByNumericValues.length; i += 1) {\n    if (filterByNumericValues[i].comparison === 'maior que') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByNumericValues[i].column]) > Number(filterByNumericValues[i].value));\n    } else if (filterByNumericValues[i].comparison === 'menor que') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByNumericValues[i].column]) < Number(filterByNumericValues[i].value));\n    } else if (filterByNumericValues[i].comparison === 'igual a') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByNumericValues[i].column]) === Number(filterByNumericValues[i].value));\n    }\n  }\n  return planets;\n}\n\nconst Dropfilters = () => {\n  const [col, setColumn] = useState('');\n  const [comp, setComparison] = useState('');\n  const [val, setValue] = useState('');\n\n  const { filterByNumericValues, setfilterByNumericValues } = useContext(StarWarsContext);\n\n  const columnOptions = () => {\n    const selectedFilterColumns = filterByNumericValues.map((filter) => filter.column);\n    const startColumns = [\n      'coluna',\n      'population',\n      'orbital_period',\n      'diameter',\n      'rotation_period',\n      'surface_water'];\n    const columns = startColumns.filter((colm) => !selectedFilterColumns.includes(colm));\n    return columns.map((coluna) => <option value={coluna} key={coluna}>{coluna}</option>);\n  };\n\n  const Scolumn = (event) => setColumn(event.target.value);\n  const Scomp = (event) => setComparison(event.target.value);\n  const Sval = (event) => setValue(event.target.value);\n\n  return (\n    <form>\n      <label htmlFor=\"column\"> Selecione a coluna:\n        <select data-testid=\"column-filter\" value={column} onChange={(event) => Scolumn(event)}>\n          {columnOptions()}\n        </select>\n      </label>\n      <label htmlFor=\"comparison\"> Selecione a comparação:\n        <select data-testid=\"comparison-filter\" value={comparison} onChange={(e) => Scomp(e)}>\n          <option>selecione:</option>\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n      </label>\n      <input type=\"number\" data-testid=\"value-filter\" onChange={(event) => Sval(event)} />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={() => { setfilterByNumericValues([...filterByNumericValues, { col, comp, val }]); }}\n      >Filtrar</button></form>\n  );\n};\n\nexport default Dropfilters;\n"]},"metadata":{},"sourceType":"module"}