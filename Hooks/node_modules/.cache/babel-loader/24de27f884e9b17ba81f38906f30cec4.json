{"ast":null,"code":"var _jsxFileName = \"/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/Dropfilters.js\";\n// import PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport { StarWarsContext } from '../context/starWarsContext'; // import { connect } from 'react-redux';\n// import { filterByNumericValues } from '../reducers/filters';\n\nexport function datafilterfunction(filteredPlanets, filterByNumericValues) {\n  let planets = filteredPlanets;\n\n  for (let i = 0; i < filterByNumericValues.length; i += 1) {\n    if (filterByNumericValues[i].comparison === 'maior que') {\n      planets = planets.filter(planet => Number(planet[filterByNumericValues[i].column]) > Number(filterByNumericValues[i].value));\n    } else if (filterByNumericValues[i].comparison === 'menor que') {\n      planets = planets.filter(planet => Number(planet[filterByNumericValues[i].column]) < Number(filterByNumericValues[i].value));\n    } else if (filterByNumericValues[i].comparison === 'igual a') {\n      planets = planets.filter(planet => Number(planet[filterByNumericValues[i].column]) === Number(filterByNumericValues[i].value));\n    }\n  }\n\n  return planets;\n}\n\nconst Dropfilters = () => {\n  // this.state = {\n  //     column: '',\n  //     comparison: '',\n  //     value: '',\n  //   };\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(''); // colChange(event) {\n  //   setColumn(event.target.value);\n  // }\n  // compChange(event) {\n  //   setComparison(event.target.value);\n  // }\n  // vChange(event) {\n  //   setValue(event.target.value);\n  // }\n\n  const {\n    filterByNumericValues,\n    setfilterByNumericValues\n  } = useContext(StarWarsContext);\n\n  const columnOptions = () => {\n    // const { numericValuesFilter } = this.props;\n    const selectedFilterColumns = filterByNumericValues.map(filter => filter.column);\n    let columns = ['coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n    columns = columns.filter(column => !selectedFilterColumns.includes(column));\n    return columns.map(column => /*#__PURE__*/React.createElement(\"option\", {\n      value: column,\n      key: column,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }\n    }, column));\n  }; //  const tsc = this.state.comparison;\n\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \" Selecione a coluna:\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    value: column,\n    onChange: event => setColumn(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, columnOptions)), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \" Selecione a compara\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    value: comparison,\n    onChange: event => setComparison(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"selecione:\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"igual a\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"data-testid\": \"value-filter\",\n    onChange: event => setValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: setfilterByNumericValues({\n      column,\n      comparison,\n      value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"));\n}; // const mapStateToProps = (state) => ({\n//   numericValuesFilter: state.filters.filterByNumericValues,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   handleSubmit: (values) => dispatch(filterByNumericValues(values)),\n// });\n\n\nexport default Dropfilters; // Dropfilters.propTypes = {\n//   handleSubmit: PropTypes.func.isRequired,\n//   numericValuesFilter: PropTypes.arrayOf(PropTypes.object).isRequired,\n// };","map":{"version":3,"sources":["/home/cd/trybe-projects/sd-05-project-starwars-datatable-hooks/src/components/Dropfilters.js"],"names":["React","useState","useContext","StarWarsContext","datafilterfunction","filteredPlanets","filterByNumericValues","planets","i","length","comparison","filter","planet","Number","column","value","Dropfilters","setColumn","setComparison","setValue","setfilterByNumericValues","columnOptions","selectedFilterColumns","map","columns","includes","event","target"],"mappings":"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","sourcesContent":["// import PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport { StarWarsContext } from '../context/starWarsContext';\n// import { connect } from 'react-redux';\n// import { filterByNumericValues } from '../reducers/filters';\n\nexport function datafilterfunction(filteredPlanets, filterByNumericValues) {\n  let planets = filteredPlanets;\n  for (let i = 0; i < filterByNumericValues.length; i += 1) {\n    if (filterByNumericValues[i].comparison === 'maior que') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByNumericValues[i].column]) > Number(filterByNumericValues[i].value));\n    } else if (filterByNumericValues[i].comparison === 'menor que') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByNumericValues[i].column]) < Number(filterByNumericValues[i].value));\n    } else if (filterByNumericValues[i].comparison === 'igual a') {\n      planets = planets.filter((planet) =>\n        Number(planet[filterByNumericValues[i].column]) === Number(filterByNumericValues[i].value));\n    }\n  }\n  return planets;\n}\n\nconst Dropfilters = () => {\n  // this.state = {\n  //     column: '',\n  //     comparison: '',\n  //     value: '',\n  //   };\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState('');\n\n  // colChange(event) {\n  //   setColumn(event.target.value);\n  // }\n\n  // compChange(event) {\n  //   setComparison(event.target.value);\n  // }\n\n  // vChange(event) {\n  //   setValue(event.target.value);\n  // }\n\n  const { filterByNumericValues, setfilterByNumericValues } = useContext(StarWarsContext);\n  \n  const columnOptions = () => {\n    // const { numericValuesFilter } = this.props;\n    const selectedFilterColumns = filterByNumericValues.map((filter) => filter.column);\n    let columns = [\n      'coluna',\n      'population',\n      'orbital_period',\n      'diameter',\n      'rotation_period',\n      'surface_water'];\n    columns = columns.filter((column) => !selectedFilterColumns.includes(column));\n    return columns.map((column) => <option value={column} key={column}>{column}</option>);\n  };\n\n  //  const tsc = this.state.comparison;\n  return (\n    <form>\n      <label htmlFor=\"column\"> Selecione a coluna:\n        <select data-testid=\"column-filter\" value={column} onChange={(event) => setColumn(event.target.value)}>\n          {columnOptions}\n        </select>\n      </label>\n      <label htmlFor=\"comparison\"> Selecione a comparação:\n        <select data-testid=\"comparison-filter\" value={comparison} onChange={(event) => setComparison(event.target.value)}>\n          <option>selecione:</option>\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n      </label>\n      <input type=\"number\" data-testid=\"value-filter\" onChange={(event) => setValue(event.target.value)} />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ setfilterByNumericValues({column, comparison, value}) }\n      >Filtrar</button></form>\n  )\n}\n\n// const mapStateToProps = (state) => ({\n//   numericValuesFilter: state.filters.filterByNumericValues,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   handleSubmit: (values) => dispatch(filterByNumericValues(values)),\n// });\n\nexport default Dropfilters;\n\n// Dropfilters.propTypes = {\n//   handleSubmit: PropTypes.func.isRequired,\n//   numericValuesFilter: PropTypes.arrayOf(PropTypes.object).isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}